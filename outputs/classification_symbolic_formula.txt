Generated by OIKAN v0.0.2 | Timestamp: 2025-04-12 22:15:28.317502

Symbolic Formulas:
====================
Feature 0 - Class 0: -0.1523*x + -0.1071*x^2 + 0.1234*x^3 + 0.0084*exp(x) + -0.0230*log(x) + 0.1315*sqrt(x) + -0.0105*tanh(x) + -0.0041*sin(x) + -0.0395*abs(x)
Feature 0 - Class 1: -0.0056*x + 0.0011*x^2 + 0.0030*x^3 + -0.0026*exp(x) + -0.0020*log(x) + 0.0019*sqrt(x) + 0.0029*tanh(x) + 0.0030*sin(x) + 0.0017*abs(x)
Feature 0 - Class 2: 0.0652*x + 0.0301*x^2 + -0.0525*x^3 + -0.0458*exp(x) + -0.0141*log(x) + -0.0883*sqrt(x) + 0.0018*tanh(x) + 0.0327*sin(x) + -0.0511*abs(x)
Feature 1 - Class 0: -0.3371*x + 0.0731*x^2 + 0.2669*x^3 + -0.0212*exp(x) + 0.3764*log(x) + -0.0354*sqrt(x) + 0.2706*tanh(x) + 0.3081*sin(x) + 0.2840*abs(x)
Feature 1 - Class 1: 0.0292*x + -0.0079*x^2 + 0.0237*x^3 + -0.0149*exp(x) + 0.0014*log(x) + 0.0084*sqrt(x) + -0.0105*tanh(x) + 0.0083*sin(x) + -0.0203*abs(x)
Feature 1 - Class 2: -0.0332*x + -0.0786*x^2 + 0.1687*x^3 + -0.0167*exp(x) + -0.0996*log(x) + -0.0493*sqrt(x) + -0.0035*tanh(x) + 0.0759*sin(x) + -0.0883*abs(x)
Feature 2 - Class 0: 0.0255*x + -0.0763*x^2 + -0.1844*x^3 + -0.0897*exp(x) + 0.0561*log(x) + -0.1189*sqrt(x) + -0.0343*tanh(x) + -0.0978*sin(x) + 0.0454*abs(x)
Feature 2 - Class 1: -0.0254*x + -0.0804*x^2 + -0.0022*x^3 + -0.0433*exp(x) + -0.1251*log(x) + -0.1234*sqrt(x) + 0.0180*tanh(x) + -0.0212*sin(x) + -0.0147*abs(x)
Feature 2 - Class 2: 0.1310*x + -0.0399*x^2 + 0.2279*x^3 + 0.0311*exp(x) + 0.0912*log(x) + -0.0044*sqrt(x) + 0.0900*tanh(x) + 0.2131*sin(x) + -0.0008*abs(x)
Feature 3 - Class 0: 0.0003*x + -0.0010*x^2 + -0.0037*x^3 + -0.0057*exp(x) + 0.0072*log(x) + -0.0036*sqrt(x) + -0.0003*tanh(x) + 0.0052*sin(x) + 0.0015*abs(x)
Feature 3 - Class 1: -0.1278*x + 0.1689*x^2 + -0.0294*x^3 + -0.0856*exp(x) + -0.1511*log(x) + 0.0705*sqrt(x) + -0.1456*tanh(x) + -0.0279*sin(x) + -0.0913*abs(x)
Feature 3 - Class 2: -0.0037*x + -0.0267*x^2 + 0.0568*x^3 + 0.0258*exp(x) + -0.0464*log(x) + 0.0664*sqrt(x) + -0.0966*tanh(x) + 0.0606*sin(x) + 0.0559*abs(x)

General Formula (with softmax):
For each class j: y_j = softmax( sum_i [ symbolic_formula(feature_i, class_j) ] )

Recommendations:
• Use the symbolic formulas for streamlined inference in production.
• Verify predictions with both the neural network and the compiled symbolic predictor.
